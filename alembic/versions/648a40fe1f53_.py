"""empty message

Revision ID: 648a40fe1f53
Revises: 
Create Date: 2023-07-23 11:30:19.232568

"""
from alembic import op
import sqlalchemy as sa
from db.db_setup import SCHEMA, environment


# revision identifiers, used by Alembic.
revision = '648a40fe1f53'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.String(), nullable=False),
    sa.Column('longitude', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)

    if environment == "production":
        op.execute(f"ALTER TABLE locations SET SCHEMA {SCHEMA};")
    
    op.create_table('mobile_food_facility_permits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('applicant', sa.String(), nullable=False),
    sa.Column('facility_type', sa.String(), nullable=False),
    sa.Column('cnn', sa.Integer(), nullable=False),
    sa.Column('location_description', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('blocklot', sa.String(), nullable=False),
    sa.Column('block', sa.String(), nullable=False),
    sa.Column('lot', sa.String(), nullable=False),
    sa.Column('permit', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('food_items', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_index(op.f('ix_mobile_food_facility_permits_id'), 'mobile_food_facility_permits', ['id'], unique=False)

    if environment == "production":
        op.execute(f"ALTER TABLE mobile_food_facility_permits SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_mobile_food_facility_permits_id'), table_name='mobile_food_facility_permits')
    op.drop_table('mobile_food_facility_permits')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    # ### end Alembic commands ###
